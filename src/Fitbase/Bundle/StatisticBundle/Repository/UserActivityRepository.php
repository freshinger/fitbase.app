<?php

namespace Fitbase\Bundle\StatisticBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UserActivityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserActivityRepository extends EntityRepository
{
    /**
     * Get expression to find record by user id
     * @param $queryBuilder
     * @param $user
     * @return mixed
     */
    public function getExprUser($queryBuilder, $user)
    {
        if (!empty($user)) {

            $queryBuilder->setParameter('user', $user->getId());
            return $queryBuilder->expr()->eq('UserActivity.user', ':user');
        }

        return $queryBuilder->expr()->eq('0', '1');
    }

    /**
     * Find last record by user
     * @param $user
     * @return mixed
     */
    public function findOneLastByUser($user)
    {
        $queryBuilder = $this->createQueryBuilder('UserActivity');

        $queryBuilder->where($queryBuilder->expr()->andX(
            $this->getExprUser($queryBuilder, $user)
        ));

        $queryBuilder->addOrderBy('UserActivity.id', 'DESC');
        $queryBuilder->setMaxResults(1);

        return $queryBuilder->getQuery()->getOneOrNullResult();
    }

    /**
     * Get user point statistic
     * @param null $user
     * @param \DateTime $date
     * @return array
     */
    public function findAllByUserGroupByWeek($user = null, \DateTime $date)
    {
        if (!empty($user)) {

            $connection = $this->getEntityManager()->getConnection();

            $query = $connection->prepare("SELECT
                  fitbase_user_activity.date as date,
                  SUM(fitbase_user_activity.count_point) as count_point_total
                  FROM fitbase_user_activity
                  WHERE fitbase_user_activity.user_id=:user_id
                  AND fitbase_user_activity.date > DATE(:date)
                  GROUP BY WEEK(date)");

            $query->execute(array(
                'user_id' => $user->getId(),
                'date' => $date->format('Y-m-d'),
            ));

            return $query->fetchAll();
        }

        return array();
    }
}

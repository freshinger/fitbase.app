<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\ClassificationBundle\Entity;

use Sonata\ClassificationBundle\Entity\BaseCategory as BaseCategory;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/bundles/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class Category extends BaseCategory
{
    /**
     * @var integer $id
     */
    protected $id;

    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    private $exercises;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->exercises = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add exercises
     *
     * @param \Fitbase\Bundle\ExerciseBundle\Entity\Exercise $exercises
     * @return Category
     */
    public function addExercise(\Fitbase\Bundle\ExerciseBundle\Entity\Exercise $exercises)
    {
        $this->exercises[] = $exercises;

        return $this;
    }

    /**
     * Remove exercises
     *
     * @param \Fitbase\Bundle\ExerciseBundle\Entity\Exercise $exercises
     */
    public function removeExercise(\Fitbase\Bundle\ExerciseBundle\Entity\Exercise $exercises)
    {
        $this->exercises->removeElement($exercises);
    }

    /**
     * Get exercises
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getExercises()
    {
        return $this->exercises;
    }

    /**
     * @return string
     */
    public function __toString()
    {
        if (($parent = $this->getParent())) {
            return "{$parent->getName()}: {$this->getName()}";
        }
        return $this->getName();
    }

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    protected $weeklytasks;


    /**
     * Add weeklytasks
     *
     * @param \Fitbase\Bundle\WeeklytaskBundle\Entity\Weeklytask $weeklytasks
     * @return Category
     */
    public function addWeeklytask(\Fitbase\Bundle\WeeklytaskBundle\Entity\Weeklytask $weeklytasks)
    {
        $this->weeklytasks[] = $weeklytasks;

        return $this;
    }

    /**
     * Remove weeklytasks
     *
     * @param \Fitbase\Bundle\WeeklytaskBundle\Entity\Weeklytask $weeklytasks
     */
    public function removeWeeklytask(\Fitbase\Bundle\WeeklytaskBundle\Entity\Weeklytask $weeklytasks)
    {
        $this->weeklytasks->removeElement($weeklytasks);
    }

    /**
     * Get weeklytasks
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getWeeklytasks()
    {
        return $this->weeklytasks;
    }

}
